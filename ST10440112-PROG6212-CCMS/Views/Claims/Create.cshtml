@model ST10440112_PROG6212_CCMS.ViewModels.ClaimSubmissionViewModel

@{
    ViewData["Title"] = "Submit New Claim";
}

<div class="container mt-4">
    <h2 style="color: #13325B;">Submit New Claim</h2>
    <p class="text-muted">Complete the form below to submit your monthly claim for review.</p>

    <form asp-action="Create" method="post" enctype="multipart/form-data" id="claimForm">
        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

        <div class="card mb-4">
            <div class="card-header" style="background-color: #13325B; color: white;">
                <h5 class="mb-0"><i class="bi bi-clock"></i> Work Hours & Rate</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="TotalHours" class="form-label"></label>
                        <input asp-for="TotalHours" class="form-control" type="number" step="0.5" min="0.5" max="200" />
                        <span asp-validation-for="TotalHours" class="text-danger"></span>
                        <small class="form-text text-muted">Must be between 0.5 and 200 hours</small>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label asp-for="HourlyRate" class="form-label"></label>
                        <div class="input-group">
                            <span class="input-group-text">R</span>
                            <input asp-for="HourlyRate" class="form-control" type="number" min="100" max="1000" />
                        </div>
                        <span asp-validation-for="HourlyRate" class="text-danger"></span>
                        <small class="form-text text-muted">Must be between R100 and R1000</small>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12">
                        <div class="alert alert-info">
                            <strong>Total Claim Amount:</strong>
                            <span id="totalAmount" style="font-size: 1.5rem; color: #13325B;">R 0.00</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-header" style="background-color: #13325B; color: white;">
                <h5 class="mb-0"><i class="bi bi-file-earmark-text"></i> Supporting Documents</h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label asp-for="Documents" class="form-label"></label>
                    <input type="file" asp-for="Documents" class="form-control" id="fileInput" multiple accept=".pdf,.docx,.xlsx" />
                    <span asp-validation-for="Documents" class="text-danger"></span>
                    <small class="form-text text-muted">
                        Accepted formats: PDF, DOCX, XLSX | Maximum size: 10MB per file
                    </small>
                </div>
                <div id="fileList"></div>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-header" style="background-color: #13325B; color: white;">
                <h5 class="mb-0"><i class="bi bi-chat-left-text"></i> Additional Notes (Optional)</h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <textarea asp-for="AdditionalNotes" class="form-control" rows="4" maxlength="1000" placeholder="Add any additional information about this claim..."></textarea>
                    <span asp-validation-for="AdditionalNotes" class="text-danger"></span>
                    <small class="form-text text-muted"><span id="charCount">0</span> / 1000 characters</small>
                </div>
            </div>
        </div>

        <div class="d-grid gap-2 d-md-flex justify-content-md-end mb-4">
            <a asp-action="Index" asp-controller="Home" class="btn btn-secondary">
                <i class="bi bi-x-circle"></i> Cancel
            </a>
            <button type="submit" class="btn btn-primary" style="background-color: #9F7944; border-color: #9F7944;">
                <i class="bi bi-check-circle"></i> Submit Claim
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        // Calculate total amount
        function calculateTotals() {
            const hours = parseFloat($('#TotalHours').val()) || 0;
            const rate = parseFloat($('#HourlyRate').val()) || 0;
            const total = hours * rate;
            $('#totalAmount').text('R ' + total.toFixed(2));
        }

        // Update calculations on input change
        $('#TotalHours, #HourlyRate').on('input', calculateTotals);

        // Character count for additional notes
        $('#AdditionalNotes').on('input', function() {
            const length = $(this).val().length;
            $('#charCount').text(length);
            
            if (length > 900) {
                $('#charCount').css('color', 'red');
            } else if (length > 800) {
                $('#charCount').css('color', 'orange');
            } else {
                $('#charCount').css('color', 'inherit');
            }
        });

        // File selection handling with validation
        $('#fileInput').on('change', function() {
            const files = this.files;
            const fileList = $('#fileList');
            fileList.empty();

            if (files.length > 0) {
                let validFiles = true;
                let html = '<div class="alert alert-info"><strong>Selected Files:</strong><ul class="mb-0 mt-2">';
                
                for (let i = 0; i < files.length; i++) {
                    const file = files[i];
                    const fileSize = file.size / 1024 / 1024; // Convert to MB
                    const fileExt = file.name.split('.').pop().toLowerCase();
                    const allowedExts = ['pdf', 'docx', 'xlsx'];
                    
                    let fileStatus = '';
                    if (fileSize > 10) {
                        fileStatus = ' <span class="text-danger">(File too large - max 10MB)</span>';
                        validFiles = false;
                    } else if (!allowedExts.includes(fileExt)) {
                        fileStatus = ' <span class="text-danger">(Invalid file type)</span>';
                        validFiles = false;
                    } else {
                        fileStatus = ' <span class="text-success">âœ“</span>';
                    }
                    
                    html += `<li>${file.name} (${fileSize.toFixed(2)} MB)${fileStatus}</li>`;
                }
                
                html += '</ul></div>';
                fileList.html(html);
                
                if (!validFiles) {
                    fileList.prepend('<div class="alert alert-danger">Some files are invalid. Please check the requirements.</div>');
                }
            }
        });

        // Form validation before submit
        $('#claimForm').on('submit', function(e) {
            const hours = parseFloat($('#TotalHours').val());
            const rate = parseFloat($('#HourlyRate').val());
            
            if (hours < 0.5 || hours > 200) {
                e.preventDefault();
                alert('Hours must be between 0.5 and 200.');
                return false;
            }
            
            if (rate < 100 || rate > 1000) {
                e.preventDefault();
                alert('Hourly rate must be between R100 and R1000.');
                return false;
            }
            
            const files = $('#fileInput')[0].files;
            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                const fileSize = file.size / 1024 / 1024;
                const fileExt = file.name.split('.').pop().toLowerCase();
                const allowedExts = ['pdf', 'docx', 'xlsx'];
                
                if (fileSize > 10) {
                    e.preventDefault();
                    alert(`File "${file.name}" exceeds 10MB limit.`);
                    return false;
                }
                
                if (!allowedExts.includes(fileExt)) {
                    e.preventDefault();
                    alert(`File "${file.name}" has invalid format. Only PDF, DOCX, and XLSX allowed.`);
                    return false;
                }
            }
        });

        // Initialize calculations on page load
        $(document).ready(function() {
            calculateTotals();
        });
    </script>
}
