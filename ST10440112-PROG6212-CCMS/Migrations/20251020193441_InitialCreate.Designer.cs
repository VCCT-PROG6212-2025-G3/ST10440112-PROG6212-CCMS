// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ST10440112_PROG6212_CCMS.Data;

#nullable disable

namespace ST10440112_PROG6212_CCMS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251020193441_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ST10440112_PROG6212_CCMS.Models.Admin", b =>
                {
                    b.Property<Guid>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdminEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.HasKey("AdminID");

                    b.ToTable("Admin");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Admin");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ST10440112_PROG6212_CCMS.Models.Claim", b =>
                {
                    b.Property<Guid>("ClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ClaimDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClaimStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HourlyRate")
                        .HasColumnType("int");

                    b.Property<bool>("IsSettled")
                        .HasColumnType("bit");

                    b.Property<Guid>("LecturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("TotalHours")
                        .HasColumnType("real");

                    b.HasKey("ClaimId");

                    b.HasIndex("LecturerId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("ST10440112_PROG6212_CCMS.Models.Document", b =>
                {
                    b.Property<Guid>("DocumentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClaimId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("DocumentID");

                    b.HasIndex("ClaimId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("ST10440112_PROG6212_CCMS.Models.Lecturer", b =>
                {
                    b.Property<Guid>("LecturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("LecturerId");

                    b.ToTable("Lecturers");

                    b.HasData(
                        new
                        {
                            LecturerId = new Guid("0ec98110-6271-4678-a357-e1fdca5712b2"),
                            Department = "Faculty of Science",
                            Email = "michael.jones@newlands.ac.za",
                            Name = "Michael Jones"
                        });
                });

            modelBuilder.Entity("ST10440112_PROG6212_CCMS.Models.AcademicManager", b =>
                {
                    b.HasBaseType("ST10440112_PROG6212_CCMS.Models.Admin");

                    b.Property<string>("Faculty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasDiscriminator().HasValue("AcademicManager");

                    b.HasData(
                        new
                        {
                            AdminID = new Guid("4d069670-e4ba-404a-adca-ea80d69acdc9"),
                            AdminEmail = "janet.duplessis@newlands.ac.za",
                            AdminName = "Janet Du Plessis",
                            Faculty = "Faculty of Science"
                        });
                });

            modelBuilder.Entity("ST10440112_PROG6212_CCMS.Models.ProgrammeCoordinator", b =>
                {
                    b.HasBaseType("ST10440112_PROG6212_CCMS.Models.Admin");

                    b.Property<string>("MajorDegree")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasDiscriminator().HasValue("ProgrammeCoordinator");

                    b.HasData(
                        new
                        {
                            AdminID = new Guid("687f12ce-dcc8-4a89-9bbc-99ffe7571bab"),
                            AdminEmail = "ebrahim.jacobs@newlands.ac.za",
                            AdminName = "Ebrahim Jacobs",
                            MajorDegree = "Computer Science"
                        });
                });

            modelBuilder.Entity("ST10440112_PROG6212_CCMS.Models.Claim", b =>
                {
                    b.HasOne("ST10440112_PROG6212_CCMS.Models.Lecturer", "Lecturer")
                        .WithMany("Claims")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("ST10440112_PROG6212_CCMS.Models.Document", b =>
                {
                    b.HasOne("ST10440112_PROG6212_CCMS.Models.Claim", "Claim")
                        .WithMany("Documents")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claim");
                });

            modelBuilder.Entity("ST10440112_PROG6212_CCMS.Models.Claim", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("ST10440112_PROG6212_CCMS.Models.Lecturer", b =>
                {
                    b.Navigation("Claims");
                });
#pragma warning restore 612, 618
        }
    }
}
